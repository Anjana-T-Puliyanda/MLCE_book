Traceback (most recent call last):
  File "C:\Users\DELL\Anaconda3\envs\ML4ChemEng\lib\site-packages\jupyter_cache\executors\utils.py", line 64, in single_nb_execution
    **kwargs,
  File "C:\Users\DELL\Anaconda3\envs\ML4ChemEng\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\DELL\Anaconda3\envs\ML4ChemEng\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\DELL\Anaconda3\envs\ML4ChemEng\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\DELL\Anaconda3\envs\ML4ChemEng\lib\asyncio\base_events.py", line 587, in run_until_complete
    return future.result()
  File "C:\Users\DELL\Anaconda3\envs\ML4ChemEng\lib\site-packages\nbclient\client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "C:\Users\DELL\Anaconda3\envs\ML4ChemEng\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\DELL\Anaconda3\envs\ML4ChemEng\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
rewards_m_record, rewards_std_record, optimal_Reinforce = \
Reinforce(control_policy, optimizer_pol, n_epochs, n_episodes)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mRuntimeError[0m                              Traceback (most recent call last)
[1;32m~\AppData\Local\Temp\ipykernel_10812\321889361.py[0m in [0;36m<module>[1;34m[0m
[0;32m      1[0m [0mrewards_m_record[0m[1;33m,[0m [0mrewards_std_record[0m[1;33m,[0m [0moptimal_Reinforce[0m [1;33m=[0m[0;31m [0m[0;31m\[0m[1;33m[0m[1;33m[0m[0m
[1;32m----> 2[1;33m [0mReinforce[0m[1;33m([0m[0mcontrol_policy[0m[1;33m,[0m [0moptimizer_pol[0m[1;33m,[0m [0mn_epochs[0m[1;33m,[0m [0mn_episodes[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m
[1;32m~\AppData\Local\Temp\ipykernel_10812\2144225095.py[0m in [0;36mReinforce[1;34m(policy, optimizer, n_epochs, n_episodes)[0m
[0;32m      7[0m [1;33m[0m[0m
[0;32m      8[0m         [1;31m# collect data[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[1;32m----> 9[1;33m         [0mmean_logprob[0m[1;33m,[0m [0mreward_std[0m[1;33m,[0m [0mreward_m[0m [1;33m=[0m [0mepoc_run[0m[1;33m([0m[0mpolicy[0m[1;33m,[0m [0mn_episodes[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     10[0m [1;33m[0m[0m
[0;32m     11[0m         [1;31m# Expected log reward[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Temp\ipykernel_10812\321197800.py[0m in [0;36mepoc_run[1;34m(NNpolicy, episodes_n)[0m
[0;32m     21[0m     [1;32mfor[0m [0mepi_i[0m [1;32min[0m [0mrange[0m[1;33m([0m[0mepisodes_n[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m     22[0m         reward_, sum_logprob = J_PolicyCSTR(NNpolicy, policy_alg='PG_RL', 
[1;32m---> 23[1;33m                                             collect_training_data=True, episode=True)
[0m[0;32m     24[0m         [0mlogprobs_list[0m[1;33m.[0m[0mappend[0m[1;33m([0m[0msum_logprob[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m     25[0m         [0mreward_list[0m[1;33m.[0m[0mappend[0m[1;33m([0m[0mreward_[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Temp\ipykernel_10812\3786246816.py[0m in [0;36mJ_PolicyCSTR[1;34m(policy, data_res, policy_alg, collect_training_data, traj, episode)[0m
[0;32m     67[0m           [0ms[0m                         [1;33m=[0m [0ms[0m [1;33m+[0m [0meps[0m[1;33m[0m[1;33m[0m[0m
[0;32m     68[0m           [0mmean_uk[0m[1;33m,[0m [0mstd_uk[0m           [1;33m=[0m [0mmean_std[0m[1;33m([0m[0mm[0m[1;33m,[0m [0ms[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 69[1;33m           [0mu_k[0m[1;33m,[0m [0mlogprob_k[0m[1;33m,[0m [0mentropy_k[0m [1;33m=[0m [0mselect_action[0m[1;33m([0m[0mmean_uk[0m[1;33m,[0m [0mstd_uk[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     70[0m           [0mu_k[0m                       [1;33m=[0m [0mnp[0m[1;33m.[0m[0mreshape[0m[1;33m([0m[0mu_k[0m[1;33m.[0m[0mnumpy[0m[1;33m([0m[1;33m)[0m[1;33m,[0m [1;33m([0m[0mnu[0m[1;33m)[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m     71[0m           [1;31m# hard bounds on inputs[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Temp\ipykernel_10812\597782351.py[0m in [0;36mselect_action[1;34m(control_mean, control_sigma)[0m
[0;32m     10[0m     """
[0;32m     11[0m     [0ms_cov[0m          [1;33m=[0m [0mcontrol_sigma[0m[1;33m.[0m[0mdiag[0m[1;33m([0m[1;33m)[0m[1;33m**[0m[1;36m2[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 12[1;33m     [0mdist[0m           [1;33m=[0m [0mMultivariateNormal[0m[1;33m([0m[0mcontrol_mean[0m[1;33m,[0m [0ms_cov[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     13[0m     [0mcontrol_choice[0m [1;33m=[0m [0mdist[0m[1;33m.[0m[0msample[0m[1;33m([0m[1;33m)[0m                 [1;31m# sample control from N(mu,std)[0m[1;33m[0m[1;33m[0m[0m
[0;32m     14[0m     [0mlog_prob[0m       [1;33m=[0m [0mdist[0m[1;33m.[0m[0mlog_prob[0m[1;33m([0m[0mcontrol_choice[0m[1;33m)[0m [1;31m# compute log prob of this action (how likely or unlikely)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\Anaconda3\envs\ML4ChemEng\lib\site-packages\torch\distributions\multivariate_normal.py[0m in [0;36m__init__[1;34m(self, loc, covariance_matrix, precision_matrix, scale_tril, validate_args)[0m
[0;32m    144[0m [1;33m[0m[0m
[0;32m    145[0m         [0mevent_shape[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0mloc[0m[1;33m.[0m[0mshape[0m[1;33m[[0m[1;33m-[0m[1;36m1[0m[1;33m:[0m[1;33m][0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 146[1;33m         [0msuper[0m[1;33m([0m[0mMultivariateNormal[0m[1;33m,[0m [0mself[0m[1;33m)[0m[1;33m.[0m[0m__init__[0m[1;33m([0m[0mbatch_shape[0m[1;33m,[0m [0mevent_shape[0m[1;33m,[0m [0mvalidate_args[0m[1;33m=[0m[0mvalidate_args[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    147[0m [1;33m[0m[0m
[0;32m    148[0m         [1;32mif[0m [0mscale_tril[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\Anaconda3\envs\ML4ChemEng\lib\site-packages\torch\distributions\distribution.py[0m in [0;36m__init__[1;34m(self, batch_shape, event_shape, validate_args)[0m
[0;32m     51[0m                     [1;32mcontinue[0m  [1;31m# skip checking lazily-constructed args[0m[1;33m[0m[1;33m[0m[0m
[0;32m     52[0m                 [0mvalue[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mparam[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 53[1;33m                 [0mvalid[0m [1;33m=[0m [0mconstraint[0m[1;33m.[0m[0mcheck[0m[1;33m([0m[0mvalue[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     54[0m                 [1;32mif[0m [1;32mnot[0m [0mvalid[0m[1;33m.[0m[0mall[0m[1;33m([0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m     55[0m                     raise ValueError(

[1;32m~\Anaconda3\envs\ML4ChemEng\lib\site-packages\torch\distributions\constraints.py[0m in [0;36mcheck[1;34m(self, value)[0m
[0;32m    510[0m         [1;32mif[0m [1;32mnot[0m [0msym_check[0m[1;33m.[0m[0mall[0m[1;33m([0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    511[0m             [1;32mreturn[0m [0msym_check[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 512[1;33m         [1;32mreturn[0m [0mtorch[0m[1;33m.[0m[0mlinalg[0m[1;33m.[0m[0mcholesky_ex[0m[1;33m([0m[0mvalue[0m[1;33m)[0m[1;33m.[0m[0minfo[0m[1;33m.[0m[0meq[0m[1;33m([0m[1;36m0[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    513[0m [1;33m[0m[0m
[0;32m    514[0m [1;33m[0m[0m

[1;31mRuntimeError[0m: Calling torch.linalg.cholesky on a CPU tensor requires compiling PyTorch with LAPACK. Please use PyTorch built with LAPACK support.
RuntimeError: Calling torch.linalg.cholesky on a CPU tensor requires compiling PyTorch with LAPACK. Please use PyTorch built with LAPACK support.

